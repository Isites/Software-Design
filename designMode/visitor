#访问者模式
##访问者模式的优点
>* **符合单一职责原则**: 凡是使用访问者模式的场景中，元素类中需要封装在访问者中的操作必定是与元素类本身关系不大且易变的操作，使用访问者模式一方面符合单一职责原则，另一方面，因为被封装的操作通常来说都是易变的，所以当发生变化时，就可以在不改变类本身的前提下，实现对变化部分的扩展。
>* **扩展性好**:  元素类可以通过接受不同的访问者来实现对不同操作的扩展。
##访问者模式适用的场景
>假如一个对象中存在一些与本对象不相干(或者相关较弱)的操作，为了避免这些操作污染这个对象，则可以使用访问者模式来吧这些操作封装到访问这种去。
>假如一组对象中，存在着相似的操作，为了避免出现大量重复的代码，也可以将这些重复的操作封装到访问这种去。但是访问者模式并不是那么完美，它也有致命的缺陷: 增加新的元素比较困难。通过访问者模式的代码可以看到，在访问者类中，每一个元素类都有它对应的处理方法，也就是说，每增加一个元素类都需要修改访问者类(也包括访问者类的子类或者实现类)，修改起来相当麻烦。也就是说，在元素数目不确定的情况下，应该慎用访问者模式。所以，访问者模式比较适用于对已有功能的重构，比如说，一个项目的基本功能已经确定下来，元素的数据已经基本确定下来不会变了，会变的只是这些元素内的相关操作，这时候，我们可以使用访问者模式对原有代码进行重构一遍，这样一来，就可以在不修改各个元素类的情况下，对原有功能进行修改。